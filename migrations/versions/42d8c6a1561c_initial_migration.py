"""Initial migration

Revision ID: 42d8c6a1561c
Revises: 
Create Date: 2022-08-23 15:36:10.187405

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "42d8c6a1561c"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "administrators",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=20), nullable=False),
        sa.Column("last_name", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=60), nullable=False),
        sa.Column("phone", sa.String(length=14), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column(
            "role",
            sa.Enum("administrator", "manager", "agent", "requester", name="userrole"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "requesters",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=20), nullable=False),
        sa.Column("last_name", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=60), nullable=False),
        sa.Column("phone", sa.String(length=14), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column(
            "role",
            sa.Enum("administrator", "manager", "agent", "requester", name="userrole"),
            nullable=False,
        ),
        sa.Column(
            "preferred_language",
            sa.Enum("bg", "it", "de", "fr", "en", name="userpreferredlanguage"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "managers",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=20), nullable=False),
        sa.Column("last_name", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=60), nullable=False),
        sa.Column("phone", sa.String(length=14), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("administrator_id", sa.Integer(), nullable=True),
        sa.Column(
            "role",
            sa.Enum("administrator", "manager", "agent", "requester", name="userrole"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["administrator_id"],
            ["administrators.pk"],
        ),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "agents",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=20), nullable=False),
        sa.Column("last_name", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=60), nullable=False),
        sa.Column("phone", sa.String(length=14), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("manager_id", sa.Integer(), nullable=True),
        sa.Column(
            "role",
            sa.Enum("administrator", "manager", "agent", "requester", name="userrole"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["managers.pk"],
        ),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "tickets",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("resolution_text", sa.Text(), nullable=True),
        sa.Column(
            "created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("last_update_on", sa.DateTime(), nullable=True),
        sa.Column("closed_on", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("new", "open", "pending", "resolved", "closed", name="ticketstate"),
            nullable=True,
        ),
        sa.Column(
            "priority",
            sa.Enum("low", "normal", "high", "urgent", name="ticketpriority"),
            nullable=True,
        ),
        sa.Column("requester_id", sa.Integer(), nullable=False),
        sa.Column("agent_id", sa.Integer(), nullable=True),
        sa.Column("manager_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["managers.pk"],
        ),
        sa.ForeignKeyConstraint(
            ["requester_id"],
            ["requesters.pk"],
        ),
        sa.PrimaryKeyConstraint("pk"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tickets")
    op.drop_table("agents")
    op.drop_table("managers")
    op.drop_table("requesters")
    op.drop_table("administrators")
    # ### end Alembic commands ###
